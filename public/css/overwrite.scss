$fixed-header-height: 3.8rem;
html {
    overflow-x: hidden; // fixes an issue with context-menus
    overflow-y: hidden; // fixes random bugs that occur with changing the table widths dynamically
}
#page-wrapper {
    display: flex;
    flex-direction: column;
    height: 100vh;
}
header.navbar {
    -webkit-align-items: stretch;
    align-items: stretch;
    #media-buttons {
        display: -webkit-box; /* fallback for apple webkit */
        display: flex;
        -webkit-flex-direction: column;
        flex-direction: column;
        justify-content: space-around;
        // remove shadow behind button group
        align-items: baseline;
    }
    #header-middle {
        display: -webkit-box; /* fallback for apple webkit */
        display: flex;
        -webkit-align-items: center;
        align-items: center;
        flex: 3;

        // I want the height of the image to depend on the header,
        // but I can't seem to get it to work with the mobile layout...
        #album-art {
            flex: 0;
            height: $fixed-header-height;
            padding: 0 0.3rem;
        }
        #music-time {
            transition: none;
        }
    }
    #header-right {
        display: -webkit-box; /* fallback for apple webkit */
        display: flex;
        -webkit-flex-direction: column;
        flex-direction: column;
        justify-content: space-around;
        flex: 1;

        #header-right-top {
            display: -webkit-box; /* fallback for apple webkit */
            display: flex;
            align-items: center;
        }
    }
}
main.row {
    // nowrap so the page height can stay fixed for the songlist and playlist scrollbars
    flex-wrap: nowrap;
    flex: 2;
    overflow-y: auto;
    overflow-x: hidden; // dragging off screen
    padding-top: 0.4rem;

    #browser {
        display: flex;
        flex-direction: column;

        -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;

        #browser-header {
            display: flex;
        }

        #slwrap {
            flex-grow: 2;
            overflow-x: hidden; // in case of size issues with js
            position: relative;
        }
    }
    #library {
        display: flex;
        flex-direction: column;

        -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;

        #library-top {
            display: flex;
            flex: 1;
            overflow: auto;

            #library-artists-wrap, #library-albums-wrap {
                overflow: auto;
            }

            #library-artists, #library-albums {
                flex: 1;
                display: flex;
                flex-direction: column;
                overflow: auto;
            }
        }

        #library-songs {
            flex: 1;
            overflow-y: auto;
            overflow-x: hidden; // fix issues with dragging
            display: flex;
            flex-direction: column;

            #library-songs-wrap {
                overflow: auto;
            }
        }
    }
    #playlist {
        display: flex;
        flex-direction: column;
        -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;

        #playlist-header {
            display: -webkit-box; /* fallback for apple webkit */
            display: flex;
            -webkit-align-items: center;
            align-items: center;
            text-align: center;

            #playlist-title {
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }

        #pslwrap {
            overflow: auto;
            display: flex;
            flex-grow: 2;

            #playlist-song-list {
                display: flex;
                flex: 1;

                > tbody {
                    display: flex;
                    flex: 1;
                    flex-direction: column;
                }
                td {
                    position: relative;
                }
                tr:hover {
                    .song-play {
                        display: inline;
                    }
                }
            }
        }
    }
}
#pe { // playlist editor
    width: 25rem;
    height: 20rem;
    position: fixed;
    margin-bottom: 0;
    bottom: 0;
    right: 0;
    z-index: 1002; // above floathead
    // display: flex; // hidden by css by default, flex added by js
    flex-direction: column;

    .card-heading {
        .card-default-shown {
            display: flex;
            align-items: center;
        }

        .card-title {
            flex: 1;
            text-align: center;
            cursor: move;
            margin-bottom: 0;
        }
    }

    #pe-main {
        padding: 0;
        overflow: auto;
        display: flex;
        flex: 1;
    }

    #pewrap {
        display: flex;
        flex: 1;
    }

    #pe-song-list {
        margin-bottom: 0;
        display: flex;
        flex: 1;

        > tbody {
            display: flex;
            flex: 1;
            flex-direction: column;
        }
    }
}
#pe-tab {
    position: fixed;
    margin-bottom: 0;
    bottom: 0;
    right: 0;
    z-index: 1002; // above floathead
    padding: 0.5rem;
    cursor: default;
}
#crossfade {
    width: 100%;
}
#downloader {
    min-width: 25rem;

    #downloader-status {
        min-height: 1.5rem;
    }
}
#browser-selection {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-content: center;
    align-items: center;


    > * {
        margin: 0.2rem;
    }
}
#downloader-wrap {
    overflow: auto;
    height: calc(100vh - 20rem);
    min-height: 10rem;
}
#testing { // unit testing ouput
    width: 400px;
    height: 300px;
    position: fixed;
    margin-bottom: 0;
    bottom: 0;
    z-index: 1002; // above floathead
    display: flex;
    flex-direction: column;

    #testing-main {
        padding: 0;
        overflow: auto;
        flex-grow: 2;
    }
}
.navbar.pages {
    align-items: center;
    justify-content: space-around;
    flex-wrap: nowrap;

    form {
        max-width: 20%;
        min-width: 60px;
    }
}
.append {
    cursor: default;
}
// floatThead
table.floatThead-table {
    border-top: none;
    border-bottom: none;
    background-color: #FFF;
}
.floatThead-wrapper {
    flex-grow: 2;
    display: flex;
    overflow: auto;
}
.floatThead-container {
    top: auto !important;
}
.flex-full {
    -webkit-box-flex: 1; /* fallback for apple webkit */
    flex: 1;
}
.faded {
    opacity: 0.5;
}
.faded:hover {
    opacity: 1;
}
#slwrap, #library-artists-wrap, #library-albums-wrap, #library-songs-wrap {
    // an odd problem with webkit will at first make the element
    // the same size as the parent has that has a scrollbar, instead
    // of making it parentWidth-scrollbarWidth, when set at bootstrap's
    // 100%, until resizing the browser.
    // This is used to work around that issue.
    display: flex;
}
.nowrap, .song-list-icons, .playlist-song-list-icons {
    white-space:nowrap;
}
.song-list-icons {
    // slightly less jarring for songs by themselves
    min-width: 1.5rem;
}
.fixed-table {
    /* magic */
    width: 100%;
    table-layout: fixed;
}
.fixed-table td {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
// bootstrap4 changes
.table-hover .fixed-table tr:hover {
  background: inherit;
}
.table .fixed-table td {
    border: none;
    padding: 0;
}
.breadcrumb {
    cursor: default;
}
.notify {
    position: fixed;
    bottom: 0px;
    z-index: 9999;
}
.playlists, #pe-main, #downloader-folder-list {
    user-select: none; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
}
.none, .card.none {
    display: none;
}
.dropdown-item.no-hover {
    &:hover, &:active, &:focus {
        background: inherit;
        color: inherit;
    }
}
// bootstrap
.dropdown-menu {
    z-index: 1003 !important; // above pe and floathead
}
// disables sorting for dragged item
.song-list .no-placeholder {
    display: none;
}
// enables sorting for dragged item
#playlist-song-list .no-placeholder, #pe-song-list .no-placeholder {
    display: block;
}
// context menu customizations
.context-menu-list {
    padding: 0 0 5px;
    max-width: 500px;
}
// context menu title
.context-menu-item:first-child {
    background: #EDEDED;
    color: #7D7D7D;
    font-size: 0.8em;
    cursor: default;
    margin-bottom: 5px;
}
.space-between {
    display: -webkit-box; /* fallback for apple webkit */
    display: flex;
    justify-content: space-between;
    align-self: stretch;
}
.main-link {
    flex: 1;
    text-align: center;
}
#volume-progress {
    height: 50%;
    transform: rotate(180deg);
    width: 1rem;

    #volume {
        width: 100%;
        transform: rotate(180deg);
    }
}
// Make it so when transitioning from mute, the icon does not move
#volume-speaker-container {
    display: flex;
    width: 16px;
}
// having an odd issue where a table cell was very small in ff..
@-moz-document url-prefix() {
    .width100 {
        width: 100%;
    }
}
table.table-header {
    // set display to break the table layout on purpose. It's so the js can
    // set the width properly and keep the style of how a table header should
    // look like from bootstrap (which is why we aren't using a plain div)
    // I could probably inherit the stlye from bootstrap by including it in
    // this css...
    display: block;
    margin-bottom: 0;
}
table.table-header-fixed {
    table-layout: fixed;
    margin-bottom: 0;
}
@keyframes spin {
    from { transform: scale(1) rotate(0deg) }
    to { transform: scale(1) rotate(360deg) }
}
.pulse {
    animation: pulse ease 1s;
}
.pulse2 {
    animation: pulse ease 1s 2;
}
@keyframes pulse {
    0%, 100% {
        background-color: inherit;
    }
    50% {
        background-color: #bababa;
    }
}

// "mobile"
@media (max-width: 768px) {
    $item-heights: 500px;
    html {
        overflow-y: auto;
        overflow-x: auto;
    }
    #page-wrapper {
        height: auto;
        padding: 90px 0;
    }
    main.row {
        height: auto;
        flex-wrap: wrap;
        justify-content: center;
    }
    // playlist editor
    #pe {
        height: 200px;
        width: 100%;
    }
    #browser, #playlist, #library {
        // had weird issues with just "height: 500px"
        max-height: $item-heights;
        min-height: $item-heights;
    }
    // accessibility for scrolling
    #pslwrap, #slwrap {
        border-left: 1px solid #DDD;
        border-right: 1px solid #DDD;
        border-bottom: 1px solid #DDD;
    }
    header.navbar {
        position: fixed;
        // higher than search bars
        z-index: 3;
        top: 0;
        width: 100%;

        #media-buttons {
            flex: 1;
        }

        #header-middle {
            position: fixed;
            bottom: 0;
        }
    }
    .space-between {
        display: block;
    }
    #browser-selection {
        height: $item-heights/2;
        align-self: flex-start;
    }
    #downloader {
        min-width: auto;
    }
}

@media screen and (-webkit-min-device-pixel-ratio:0) {
    // (1)
    // In bootstrap4, they removed the min-height in navbars. This issue
    // only effects webkit.
    // The height is 0 when the scrollbar for the browser or playlist
    // shows up. This is used to work around this.
    // Note: in thin-vars.scss, this gets set to a smaller value
    .pages {
        min-height: 3rem;
    }
}

// See https://github.com/twbs/bootstrap/issues/23553
.dropdown-menu.dropdown-menu-right {
    right: 0;
    left: auto;
}
