@minimumWidth: 360px;

html {
  min-width: @minimumWidth;
  overflow-x: hidden; // fixes an issue with context-menus
  overflow-y: hidden; // fixes random bugs that occur with changing the table widths dynamically
}
#page-wrapper {
  height: 100vh;
}
header {
  min-width: @minimumWidth;
}
#volume {
  width: 30px; // width set for webkit
  height: 60px;
  -webkit-appearance: slider-vertical;
}
#header-middle {
  flex: 2;
}
// I want the height of the image to depend on the header,
// but only ff seems to do what I want atm. Might try to css hack my
// way to get it working later...
#album-art {
  flex: 0;
  height: 60px;
  padding: 0 5px;
}
#header-right {
  width: 200px;
}
main {
  flex: 2;
  overflow-y: auto;
  overflow-x: hidden; // dragging off screen
}
#browser {
  display: flex;
  -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
}
#slwrap {
  flex-grow: 2;
  overflow-x: hidden; // in case of size issues with js
}
#library {
  display: flex;
  -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
}
#library-top {
  flex: 1;
  overflow: auto;
}
#library-artists-wrap, #library-albums-wrap {
  overflow: auto;
}
#library-artists, #library-albums {
  flex: 1;
  overflow: auto;
}
#library-songs {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden; // fix issues with dragging
}
#library-songs-wrap {
  overflow: auto;
}
#playlist {
  -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
}
#playlist-title {
  overflow: hidden;
  text-overflow: ellipsis;
}
#pslwrap {
  overflow: auto;
  flex-grow: 2;
}
#playlist-song-list {
  flex: 1;

  > tbody {
    flex: 1;
  }
  td {
    position: relative;
  }
  tr:hover {
    .song-play {
      display: inline;
    }
  }
}
#pe { // playlist editor
  width: 400px;
  height: 300px;
  position: fixed;
  margin-bottom: 0;
  bottom: 0;
  right: 0;
  z-index: 1002; // above floathead

  .panel-heading {
    .panel-title {
      flex: 1;
      cursor: move;
    }
  }
}
#pe-main {
  padding: 0;
  overflow: auto;
  flex: 1;
}
#pewrap {
  flex: 1;

  > table {
    cursor: pointer;
  }
}
#pe-song-list {
  margin-bottom: 0;
  flex: 1;

  > tbody {
    flex: 1;
  }
}
#pe-tab {
  position: fixed;
  margin-bottom: 0;
  bottom: 0;
  right: 0;
  z-index: 1002; // above floathead
  padding: 8px;
  cursor: pointer;
}
#downloader {
  width: 400px;
}
#downloader-status {
  white-space: normal;
}
#history-container {
  min-width: 300px;
}
#browser-selection-container {
  flex: 0;
}
#downloader-wrap {
  overflow: auto;
  height: ~"calc(100vh - 300px)";
  min-height: 100px;
}
#testing { // unit testing ouput
  width: 400px;
  height: 300px;
  position: fixed;
  margin-bottom: 0;
  bottom: 0;
  z-index: 1002; // above floathead
}
#testing-main {
  padding: 0;
  overflow: auto;
  flex-grow: 2;
}
.navbar.pages {
  display: flex;
  margin-bottom: 0;
  align-items: center;

  .form-control {
    max-width: 80px;
  }
}
// https://stackoverflow.com/a/30362531
.cell-ellipsis {
    position: relative;
}
.cell-ellipsis:before {
    content: '&nbsp;';
    visibility: hidden;
}
.cell-ellipsis span {
    position: absolute;
    left: 0;
    right: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
// floatThead
table.floatThead-table {
  border-top: none;
  border-bottom: none;
  background-color: #FFF;
  cursor: pointer;
}
.floatThead-wrapper {
  flex-grow: 2;
  display: flex;
  overflow: auto;
}
.floatThead-container {
  top: auto !important;
}
.flex-full {
  flex: 1;
}
.song-list, #downloader-folder-list, #playlist-song-list, #home, #downloader-home, .loc-dir, .downloader-loc-dir,  .playlists, .faded, #library-artists-list, #library-albums-list, #downloader-home {
  cursor: pointer;
}
.faded {
  opacity: 0.5;
}
.faded:hover {
  opacity: 1;
}
.nowrap, .song-list-icons, .playlist-song-list-icons {
  white-space:nowrap;
}
.song-list-icons {
  // slightly less jarring when there there is an init width
  min-width: 25px;
}
.fixed-table {
  /* magic */
  width: 100%;
  table-layout: fixed;
}
.fixed-table td {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.notify {
  position: fixed;
  bottom: 0px;
  z-index: 9999;
}
.playlists, #pe-main, #downloader-folder-list {
  user-select: none; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;
}
.none { // like .hidden, except without !important
  display: none;
}
.dropdown-menu .no-hover:hover {
  background: inherit;
  color: inherit;
}
// bootstrap
.modal-dialog {
  min-width: @minimumWidth;
}
.dropdown-menu {
  z-index: 1003 !important; // above pe and floathead
}
// disables sorting for dragged item
.song-list .no-placeholder {
  display: none;
}
// enables sorting for dragged item
#playlist-song-list .no-placeholder, #pe-song-list .no-placeholder {
  display: block;
}
// context menu customizations
.context-menu-list {
  padding: 0 0 5px;
  max-width: 500px;
}
// context menu title
.context-menu-item:first-child {
  background: #EDEDED;
  color: #7D7D7D;
  font-size: 0.8em;
  cursor: default;
  margin-bottom: 5px;
}
table.table-header {
  // set display to break the table layout on purpose. It's so the js can
  // set the width properly and keep the style of how a table header should
  // look like from bootstrap (which is why we aren't using a plain div)
  // I could probably inherit the stlye from bootstrap by including it in
  // this css...
  display: block;
  margin-bottom: 0;
  cursor: pointer;
}
table.table-header-fixed {
  table-layout: fixed;
  margin-bottom: 0;
  cursor: pointer;
}
@keyframes spin {
  from { transform: scale(1) rotate(0deg) }
  to { transform: scale(1) rotate(360deg) }
}
.pulse {
  animation: pulse ease 1s;
}
.pulse2 {
  animation: pulse ease 1s 2;
}
@keyframes pulse {
  0%, 100% {
    background-color: inherit;
  }
  50% {
    background-color: #bababa;
  }
}

// "mobile"
@media (max-width: 575px) {
  html {
    overflow-y: auto;
    overflow-x: auto;
  }
  #page-wrapper {
    height: auto;
  }
  // playlist editor
  #pe, #pe-tab {
    width: 100%;
  }
  #slwrap {
    height: 80vh;
  }
  #playlist {
    height: 80vh
  }
  #library {
    height: 100vh;
  }
  #header-right {
    width: 100%;
  }
}
